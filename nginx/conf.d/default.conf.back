
#################################
#
# 反向代理配置
#
#################################
server {

  listen 80;

  server_name localhost;

  # Docker服务器Nginx站点根目录
  root /var/www;

  # 添加几条有关安全的响应头,与 Google+ 的配置类似
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";

  index index.html index.htm index.php;

  charset utf-8;

  # Laravel 默认重写规则；删除将导致 Laravel 路由失效且 Nginx 响应 404。
  location / {
    try_files $uri $uri/ /index.php?$query_string;
  }

  # 关闭 [/favicon.ico] 和 [/robots.txt] 的访问日志。
  # 并且即使它们不存在，也不写入错误日志。
  location = /favicon.ico { access_log off; log_not_found off; }
  location = /robots.txt  { access_log off; log_not_found off; }

  # 将 [404] 错误交给 [/index.php] 处理，表示由 Laravel 渲染美观的错误页面。
  error_page 404 /index.php;

  location ~ \.php(.*)$ {
    fastcgi_pass lnmpr-php:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include  fastcgi_params;
  }

  # 除符合正则表达式 [/\.(?!well-known).*] 之外的 URI，全部拒绝访问
  # 也就是说，拒绝公开以 [.] 开头的目录，[.well-known] 除外
  location ~ /\.(?!well-known).* {
      deny all;
  }
}


#################################
#
# 正向代理，转发多个地址配置
#
#################################

# server {
# 
#   listen 80;
# 
#   server_name localhost;
# 
#   # 将以/one开头的uri都转发到http://one.com域名去
#   location /one {
#     # 转发代理，proxy_pass必须要以/结尾
#     proxy_pass   http://one.com/;
#   }
# 
#   location /two {
#     proxy_pass   http://two.com/;
#   }
# 
# }




#################################
#
# 定义服务集群时，配置的服务地址
# 只能是域名+端口或者ip+端口，
# 不能带有协议和路径
#
#################################

# upstream hsj {
#   server one.com:81;
#   server two.com:82;
# }
# 
# server {
#   listen 80;
#   server_name center.com;
#   location / {
#     proxy_pass http://hsj;
#   }
# }
